# Copyright 2006 by Sean Luke and George Mason University
# Licensed under the Academic Free License version 3.0
# See the file "LICENSE" for more information

parent.0 = ../ec.params

#
# The following parameter file will set up a very basic form
# of evolution, single-threaded, no coevolution, no exchanging,
# no cross-population breeding, using generational evolution,
# simple fitness, popsize=1024, etc.
# You'll need to fill in some of the gaps.
#

# ec.Evolve
# ==============================

# Use the multilevel selection state for evolution
state = ec.multilevel.MLSEvolutionState



# ec.EvolutionState
# ==============================

# We're using the standard initialization method
init = ec.simple.SimpleInitializer

# We're using the standard (empty) finalization method
finish = ec.simple.SimpleFinisher

# We're using the standard (empty) exchange method
exch = ec.simple.SimpleExchanger

# We're using standard breeding -- no cross-population breeding
breed =	ec.multilevel.MLSBreeder
breed.cooperation-prob = 0.45
breed.crossover-prob = 0.45
breed.mutation-prob = 0.1
breed.num-breed = 20
breed.num-retain = 10

# We're using standard evaluation -- no coevolution
eval = ec.multilevel.MLSEvaluator

# We're using multilevel selection statistics
stat = ec.multilevel.MLSStatistics

# run for 51 generations, quit prematurely if I find something ideal
generations = 51
quit-on-run-complete = true



# ec.Initializer
# ==============================

pop = ec.Population


# ec.Population
# ==============================

# No multiple populations
pop.subpops = 1
pop.subpop.0 = ec.multilevel.MLSSubpopulation


# ec.Subpopulation
# ==============================

# subpop size is 1024 individuals
pop.subpop.0.size =	1024

# don't bother trying to eliminate duplicates from the initial population
pop.subpop.0.duplicate-retries = 0

# You need to provide the species info for the subpopulation.

# ec.simple.SimpleBreeder
# ==============================

# By default elitism isn't done.  If you want to do elitism for, say,
# the top 10 individuals in subpopulation 0, you'd say:

# breed.elite.0 = 10


# ec.multilevel.MLSStatistics
# ==============================

# output statistics to the file "out.stat" in the directory
# the run was started in
stat.file				$out.stat


